// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`mutationsDbe 1`] = `
Object {
  "createAction": Object {
    "model": "Action",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "action": Object {
            "isNotNull": true,
            "name": "action",
            "properties": Object {
              "activityFeedText": Object {
                "name": "activityFeedText",
                "type": "String",
              },
              "alreadyCompletedActionText": Object {
                "name": "alreadyCompletedActionText",
                "type": "String",
              },
              "approved": Object {
                "name": "approved",
                "type": "Boolean",
              },
              "callToAction": Object {
                "name": "callToAction",
                "type": "String",
              },
              "completedActionText": Object {
                "name": "completedActionText",
                "type": "String",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "discoveryDescription": Object {
                "name": "discoveryDescription",
                "type": "String",
              },
              "discoveryHeader": Object {
                "name": "discoveryHeader",
                "type": "String",
              },
              "enableNotifications": Object {
                "name": "enableNotifications",
                "type": "Boolean",
              },
              "enableNotificationsText": Object {
                "name": "enableNotificationsText",
                "type": "String",
              },
              "endDate": Object {
                "name": "endDate",
                "type": "Datetime",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "locationRadius": Object {
                "name": "locationRadius",
                "type": "BigFloat",
              },
              "ownerId": Object {
                "isNotNull": true,
                "name": "ownerId",
                "type": "UUID",
              },
              "photo": Object {
                "name": "photo",
                "type": "JSON",
              },
              "photoUpload": Object {
                "name": "photoUpload",
                "type": "Upload",
              },
              "rewardAmount": Object {
                "name": "rewardAmount",
                "type": "BigFloat",
              },
              "search": Object {
                "name": "search",
                "type": "FullText",
              },
              "slug": Object {
                "name": "slug",
                "type": "String",
              },
              "startDate": Object {
                "name": "startDate",
                "type": "Datetime",
              },
              "tags": Object {
                "isArray": true,
                "name": "tags",
                "type": "String",
              },
              "timeRequired": Object {
                "name": "timeRequired",
                "properties": Object {
                  "days": Object {
                    "name": "days",
                    "type": "Int",
                  },
                  "hours": Object {
                    "name": "hours",
                    "type": "Int",
                  },
                  "minutes": Object {
                    "name": "minutes",
                    "type": "Int",
                  },
                  "months": Object {
                    "name": "months",
                    "type": "Int",
                  },
                  "seconds": Object {
                    "name": "seconds",
                    "type": "Float",
                  },
                  "years": Object {
                    "name": "years",
                    "type": "Int",
                  },
                },
              },
              "title": Object {
                "name": "title",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateActionInput",
      },
    },
    "qtype": "mutation",
  },
  "createActionGoal": Object {
    "model": "ActionGoal",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateActionGoalPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "actionGoal": Object {
            "isNotNull": true,
            "name": "actionGoal",
            "properties": Object {
              "actionId": Object {
                "isNotNull": true,
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "goalId": Object {
                "isNotNull": true,
                "name": "goalId",
                "type": "UUID",
              },
              "ownerId": Object {
                "isNotNull": true,
                "name": "ownerId",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateActionGoalInput",
      },
    },
    "qtype": "mutation",
  },
  "createActionItem": Object {
    "model": "ActionItem",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateActionItemPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "actionItem": Object {
            "isNotNull": true,
            "name": "actionItem",
            "properties": Object {
              "actionId": Object {
                "isNotNull": true,
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "embedCode": Object {
                "name": "embedCode",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "isRequired": Object {
                "name": "isRequired",
                "type": "Boolean",
              },
              "itemOrder": Object {
                "name": "itemOrder",
                "type": "Int",
              },
              "media": Object {
                "name": "media",
                "type": "String",
              },
              "mediaUpload": Object {
                "name": "mediaUpload",
                "type": "Upload",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "notificationText": Object {
                "name": "notificationText",
                "type": "String",
              },
              "ownerId": Object {
                "isNotNull": true,
                "name": "ownerId",
                "type": "UUID",
              },
              "timeRequired": Object {
                "name": "timeRequired",
                "properties": Object {
                  "days": Object {
                    "name": "days",
                    "type": "Int",
                  },
                  "hours": Object {
                    "name": "hours",
                    "type": "Int",
                  },
                  "minutes": Object {
                    "name": "minutes",
                    "type": "Int",
                  },
                  "months": Object {
                    "name": "months",
                    "type": "Int",
                  },
                  "seconds": Object {
                    "name": "seconds",
                    "type": "Float",
                  },
                  "years": Object {
                    "name": "years",
                    "type": "Int",
                  },
                },
              },
              "type": Object {
                "name": "type",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "url": Object {
                "name": "url",
                "type": "String",
              },
            },
          },
        },
        "type": "CreateActionItemInput",
      },
    },
    "qtype": "mutation",
  },
  "createActionResult": Object {
    "model": "ActionResult",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateActionResultPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "actionResult": Object {
            "isNotNull": true,
            "name": "actionResult",
            "properties": Object {
              "actionId": Object {
                "isNotNull": true,
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "ownerId": Object {
                "isNotNull": true,
                "name": "ownerId",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateActionResultInput",
      },
    },
    "qtype": "mutation",
  },
  "createGoal": Object {
    "model": "Goal",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateGoalPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "goal": Object {
            "isNotNull": true,
            "name": "goal",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "icon": Object {
                "name": "icon",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "search": Object {
                "name": "search",
                "type": "FullText",
              },
              "shortName": Object {
                "name": "shortName",
                "type": "String",
              },
              "slug": Object {
                "name": "slug",
                "type": "String",
              },
              "subHead": Object {
                "name": "subHead",
                "type": "String",
              },
              "tags": Object {
                "isArray": true,
                "name": "tags",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateGoalInput",
      },
    },
    "qtype": "mutation",
  },
  "createGoalExplanation": Object {
    "model": "GoalExplanation",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateGoalExplanationPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "goalExplanation": Object {
            "isNotNull": true,
            "name": "goalExplanation",
            "properties": Object {
              "audio": Object {
                "name": "audio",
                "type": "JSON",
              },
              "audioDuration": Object {
                "name": "audioDuration",
                "properties": Object {
                  "days": Object {
                    "name": "days",
                    "type": "Int",
                  },
                  "hours": Object {
                    "name": "hours",
                    "type": "Int",
                  },
                  "minutes": Object {
                    "name": "minutes",
                    "type": "Int",
                  },
                  "months": Object {
                    "name": "months",
                    "type": "Int",
                  },
                  "seconds": Object {
                    "name": "seconds",
                    "type": "Float",
                  },
                  "years": Object {
                    "name": "years",
                    "type": "Int",
                  },
                },
              },
              "audioUpload": Object {
                "name": "audioUpload",
                "type": "Upload",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "explanation": Object {
                "name": "explanation",
                "type": "String",
              },
              "explanationTitle": Object {
                "name": "explanationTitle",
                "type": "String",
              },
              "goalId": Object {
                "isNotNull": true,
                "name": "goalId",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateGoalExplanationInput",
      },
    },
    "qtype": "mutation",
  },
  "createMessage": Object {
    "model": "Message",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateMessagePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "message": Object {
            "isNotNull": true,
            "name": "message",
            "properties": Object {
              "content": Object {
                "name": "content",
                "type": "JSON",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "groupId": Object {
                "isNotNull": true,
                "name": "groupId",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "senderId": Object {
                "isNotNull": true,
                "name": "senderId",
                "type": "UUID",
              },
              "type": Object {
                "name": "type",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "upload": Object {
                "name": "upload",
                "type": "String",
              },
              "uploadUpload": Object {
                "name": "uploadUpload",
                "type": "Upload",
              },
            },
          },
        },
        "type": "CreateMessageInput",
      },
    },
    "qtype": "mutation",
  },
  "createMessageGroup": Object {
    "model": "MessageGroup",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateMessageGroupPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "messageGroup": Object {
            "isNotNull": true,
            "name": "messageGroup",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "memberIds": Object {
                "isArray": true,
                "name": "memberIds",
                "type": "UUID",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateMessageGroupInput",
      },
    },
    "qtype": "mutation",
  },
  "createNewsUpdate": Object {
    "model": "NewsUpdate",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateNewsUpdatePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "newsUpdate": Object {
            "isNotNull": true,
            "name": "newsUpdate",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "link": Object {
                "name": "link",
                "type": "String",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "photo": Object {
                "name": "photo",
                "type": "JSON",
              },
              "photoUpload": Object {
                "name": "photoUpload",
                "type": "Upload",
              },
              "publishedAt": Object {
                "name": "publishedAt",
                "type": "Datetime",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateNewsUpdateInput",
      },
    },
    "qtype": "mutation",
  },
  "createOrganizationProfile": Object {
    "model": "OrganizationProfile",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateOrganizationProfilePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "organizationProfile": Object {
            "isNotNull": true,
            "name": "organizationProfile",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "organizationId": Object {
                "isNotNull": true,
                "name": "organizationId",
                "type": "UUID",
              },
              "profilePicture": Object {
                "name": "profilePicture",
                "type": "JSON",
              },
              "profilePictureUpload": Object {
                "name": "profilePictureUpload",
                "type": "Upload",
              },
              "reputation": Object {
                "name": "reputation",
                "type": "BigFloat",
              },
              "tags": Object {
                "isArray": true,
                "name": "tags",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "website": Object {
                "name": "website",
                "type": "String",
              },
            },
          },
        },
        "type": "CreateOrganizationProfileInput",
      },
    },
    "qtype": "mutation",
  },
  "createUser": Object {
    "model": "User",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "user": Object {
            "isNotNull": true,
            "name": "user",
            "properties": Object {
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "type": Object {
                "name": "type",
                "type": "Int",
              },
            },
          },
        },
        "type": "CreateUserInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserAction": Object {
    "model": "UserAction",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userAction": Object {
            "isNotNull": true,
            "name": "userAction",
            "properties": Object {
              "actionId": Object {
                "isNotNull": true,
                "name": "actionId",
                "type": "UUID",
              },
              "actionStarted": Object {
                "name": "actionStarted",
                "type": "Datetime",
              },
              "complete": Object {
                "name": "complete",
                "type": "Boolean",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "rejected": Object {
                "name": "rejected",
                "type": "Boolean",
              },
              "rejectedReason": Object {
                "name": "rejectedReason",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "isNotNull": true,
                "name": "userId",
                "type": "UUID",
              },
              "userRating": Object {
                "name": "userRating",
                "type": "Int",
              },
              "verified": Object {
                "name": "verified",
                "type": "Boolean",
              },
              "verifiedDate": Object {
                "name": "verifiedDate",
                "type": "Datetime",
              },
              "verifierId": Object {
                "name": "verifierId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateUserActionInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserActionItem": Object {
    "model": "UserActionItem",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserActionItemPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userActionItem": Object {
            "isNotNull": true,
            "name": "userActionItem",
            "properties": Object {
              "actionId": Object {
                "isNotNull": true,
                "name": "actionId",
                "type": "UUID",
              },
              "actionItemId": Object {
                "isNotNull": true,
                "name": "actionItemId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "status": Object {
                "name": "status",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userActionId": Object {
                "isNotNull": true,
                "name": "userActionId",
                "type": "UUID",
              },
              "userId": Object {
                "isNotNull": true,
                "name": "userId",
                "type": "UUID",
              },
              "value": Object {
                "name": "value",
                "type": "JSON",
              },
            },
          },
        },
        "type": "CreateUserActionItemInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserActionReaction": Object {
    "model": "UserActionReaction",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserActionReactionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userActionReaction": Object {
            "isNotNull": true,
            "name": "userActionReaction",
            "properties": Object {
              "actionId": Object {
                "isNotNull": true,
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "reacterId": Object {
                "isNotNull": true,
                "name": "reacterId",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userActionId": Object {
                "isNotNull": true,
                "name": "userActionId",
                "type": "UUID",
              },
              "userId": Object {
                "isNotNull": true,
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateUserActionReactionInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserActionResult": Object {
    "model": "UserActionResult",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserActionResultPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userActionResult": Object {
            "isNotNull": true,
            "name": "userActionResult",
            "properties": Object {
              "actionId": Object {
                "isNotNull": true,
                "name": "actionId",
                "type": "UUID",
              },
              "actionResultId": Object {
                "isNotNull": true,
                "name": "actionResultId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userActionId": Object {
                "isNotNull": true,
                "name": "userActionId",
                "type": "UUID",
              },
              "userId": Object {
                "isNotNull": true,
                "name": "userId",
                "type": "UUID",
              },
              "value": Object {
                "name": "value",
                "type": "JSON",
              },
            },
          },
        },
        "type": "CreateUserActionResultInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserCharacteristic": Object {
    "model": "UserCharacteristic",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserCharacteristicPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userCharacteristic": Object {
            "isNotNull": true,
            "name": "userCharacteristic",
            "properties": Object {
              "age": Object {
                "name": "age",
                "type": "Int",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "diyLevel": Object {
                "name": "diyLevel",
                "type": "Int",
              },
              "dob": Object {
                "name": "dob",
                "type": "Date",
              },
              "education": Object {
                "name": "education",
                "type": "String",
              },
              "freeTime": Object {
                "name": "freeTime",
                "type": "Int",
              },
              "gardenerLevel": Object {
                "name": "gardenerLevel",
                "type": "Int",
              },
              "gender": Object {
                "name": "gender",
                "type": "String",
              },
              "homeOwnership": Object {
                "name": "homeOwnership",
                "type": "Int",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "income": Object {
                "name": "income",
                "type": "BigFloat",
              },
              "race": Object {
                "name": "race",
                "type": "String",
              },
              "researchToDoer": Object {
                "name": "researchToDoer",
                "type": "Int",
              },
              "treeHuggerLevel": Object {
                "name": "treeHuggerLevel",
                "type": "Int",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "isNotNull": true,
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateUserCharacteristicInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserConnection": Object {
    "model": "UserConnection",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserConnectionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userConnection": Object {
            "isNotNull": true,
            "name": "userConnection",
            "properties": Object {
              "accepted": Object {
                "name": "accepted",
                "type": "Boolean",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "requesterId": Object {
                "isNotNull": true,
                "name": "requesterId",
                "type": "UUID",
              },
              "responderId": Object {
                "isNotNull": true,
                "name": "responderId",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateUserConnectionInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserContact": Object {
    "model": "UserContact",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserContactPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userContact": Object {
            "isNotNull": true,
            "name": "userContact",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "device": Object {
                "name": "device",
                "type": "String",
              },
              "emails": Object {
                "isArray": true,
                "name": "emails",
                "type": "String",
              },
              "fullName": Object {
                "name": "fullName",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "isNotNull": true,
                "name": "userId",
                "type": "UUID",
              },
              "vcf": Object {
                "name": "vcf",
                "type": "JSON",
              },
            },
          },
        },
        "type": "CreateUserContactInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserEmail": Object {
    "model": "UserEmail",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserEmailPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userEmail": Object {
            "isNotNull": true,
            "name": "userEmail",
            "properties": Object {
              "email": Object {
                "isNotNull": true,
                "name": "email",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "isVerified": Object {
                "name": "isVerified",
                "type": "Boolean",
              },
              "userId": Object {
                "isNotNull": true,
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateUserEmailInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserMessage": Object {
    "model": "UserMessage",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserMessagePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userMessage": Object {
            "isNotNull": true,
            "name": "userMessage",
            "properties": Object {
              "content": Object {
                "name": "content",
                "type": "JSON",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "received": Object {
                "name": "received",
                "type": "Boolean",
              },
              "receiverId": Object {
                "isNotNull": true,
                "name": "receiverId",
                "type": "UUID",
              },
              "receiverReaction": Object {
                "name": "receiverReaction",
                "type": "String",
              },
              "receiverRead": Object {
                "name": "receiverRead",
                "type": "Boolean",
              },
              "senderId": Object {
                "isNotNull": true,
                "name": "senderId",
                "type": "UUID",
              },
              "senderReaction": Object {
                "name": "senderReaction",
                "type": "String",
              },
              "type": Object {
                "name": "type",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "upload": Object {
                "name": "upload",
                "type": "String",
              },
              "uploadUpload": Object {
                "name": "uploadUpload",
                "type": "Upload",
              },
            },
          },
        },
        "type": "CreateUserMessageInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserPassAction": Object {
    "model": "UserPassAction",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserPassActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userPassAction": Object {
            "isNotNull": true,
            "name": "userPassAction",
            "properties": Object {
              "actionId": Object {
                "isNotNull": true,
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "isNotNull": true,
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateUserPassActionInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserProfile": Object {
    "model": "UserProfile",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserProfilePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userProfile": Object {
            "isNotNull": true,
            "name": "userProfile",
            "properties": Object {
              "bio": Object {
                "name": "bio",
                "type": "String",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "desired": Object {
                "isArray": true,
                "name": "desired",
                "type": "String",
              },
              "displayName": Object {
                "name": "displayName",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "profilePicture": Object {
                "name": "profilePicture",
                "type": "JSON",
              },
              "profilePictureUpload": Object {
                "name": "profilePictureUpload",
                "type": "Upload",
              },
              "reputation": Object {
                "name": "reputation",
                "type": "BigFloat",
              },
              "tags": Object {
                "isArray": true,
                "name": "tags",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "isNotNull": true,
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateUserProfileInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserSavedAction": Object {
    "model": "UserSavedAction",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserSavedActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userSavedAction": Object {
            "isNotNull": true,
            "name": "userSavedAction",
            "properties": Object {
              "actionId": Object {
                "isNotNull": true,
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "isNotNull": true,
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateUserSavedActionInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserSetting": Object {
    "model": "UserSetting",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserSettingPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userSetting": Object {
            "isNotNull": true,
            "name": "userSetting",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "firstName": Object {
                "name": "firstName",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "lastName": Object {
                "name": "lastName",
                "type": "String",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "searchRadius": Object {
                "name": "searchRadius",
                "type": "BigFloat",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "isNotNull": true,
                "name": "userId",
                "type": "UUID",
              },
              "zip": Object {
                "name": "zip",
                "type": "Int",
              },
            },
          },
        },
        "type": "CreateUserSettingInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserViewedAction": Object {
    "model": "UserViewedAction",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserViewedActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userViewedAction": Object {
            "isNotNull": true,
            "name": "userViewedAction",
            "properties": Object {
              "actionId": Object {
                "isNotNull": true,
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "isNotNull": true,
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateUserViewedActionInput",
      },
    },
    "qtype": "mutation",
  },
  "createZipCode": Object {
    "model": "ZipCode",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateZipCodePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "zipCode": Object {
            "isNotNull": true,
            "name": "zipCode",
            "properties": Object {
              "bbox": Object {
                "name": "bbox",
                "type": "GeoJSON",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "zip": Object {
                "name": "zip",
                "type": "Int",
              },
            },
          },
        },
        "type": "CreateZipCodeInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteAction": Object {
    "model": "Action",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteActionInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteActionBySlug": Object {
    "model": "Action",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "slug": Object {
            "isNotNull": true,
            "name": "slug",
            "type": "String",
          },
        },
        "type": "DeleteActionBySlugInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteActionGoal": Object {
    "model": "ActionGoal",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteActionGoalPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "actionId": Object {
            "isNotNull": true,
            "name": "actionId",
            "type": "UUID",
          },
          "goalId": Object {
            "isNotNull": true,
            "name": "goalId",
            "type": "UUID",
          },
        },
        "type": "DeleteActionGoalInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteActionItem": Object {
    "model": "ActionItem",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteActionItemPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteActionItemInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteActionResult": Object {
    "model": "ActionResult",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteActionResultPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteActionResultInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteGoal": Object {
    "model": "Goal",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteGoalPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteGoalInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteGoalByName": Object {
    "model": "Goal",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteGoalPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "name": Object {
            "isNotNull": true,
            "name": "name",
            "type": "String",
          },
        },
        "type": "DeleteGoalByNameInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteGoalBySlug": Object {
    "model": "Goal",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteGoalPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "slug": Object {
            "isNotNull": true,
            "name": "slug",
            "type": "String",
          },
        },
        "type": "DeleteGoalBySlugInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteGoalExplanation": Object {
    "model": "GoalExplanation",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteGoalExplanationPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteGoalExplanationInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteMessage": Object {
    "model": "Message",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteMessagePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteMessageInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteMessageGroup": Object {
    "model": "MessageGroup",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteMessageGroupPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteMessageGroupInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteNewsUpdate": Object {
    "model": "NewsUpdate",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteNewsUpdatePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteNewsUpdateInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteOrganizationProfile": Object {
    "model": "OrganizationProfile",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteOrganizationProfilePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteOrganizationProfileInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUser": Object {
    "model": "User",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserAction": Object {
    "model": "UserAction",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserActionInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserActionItem": Object {
    "model": "UserActionItem",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserActionItemPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserActionItemInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserActionReaction": Object {
    "model": "UserActionReaction",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserActionReactionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserActionReactionInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserActionResult": Object {
    "model": "UserActionResult",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserActionResultPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserActionResultInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserCharacteristic": Object {
    "model": "UserCharacteristic",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserCharacteristicPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserCharacteristicInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserConnection": Object {
    "model": "UserConnection",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserConnectionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserConnectionInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserContact": Object {
    "model": "UserContact",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserContactPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserContactInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserEmail": Object {
    "model": "UserEmail",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserEmailPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserEmailInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserEmailByEmail": Object {
    "model": "UserEmail",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserEmailPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "email": Object {
            "isNotNull": true,
            "name": "email",
            "type": "String",
          },
        },
        "type": "DeleteUserEmailByEmailInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserEmailByUserId": Object {
    "model": "UserEmail",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserEmailPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userId": Object {
            "isNotNull": true,
            "name": "userId",
            "type": "UUID",
          },
        },
        "type": "DeleteUserEmailByUserIdInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserMessage": Object {
    "model": "UserMessage",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserMessagePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserMessageInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserPassAction": Object {
    "model": "UserPassAction",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserPassActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserPassActionInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserProfile": Object {
    "model": "UserProfile",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserProfilePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserProfileInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserSavedAction": Object {
    "model": "UserSavedAction",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserSavedActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserSavedActionInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserSetting": Object {
    "model": "UserSetting",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserSettingPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserSettingInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserViewedAction": Object {
    "model": "UserViewedAction",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserViewedActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserViewedActionInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteZipCode": Object {
    "model": "ZipCode",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteZipCodePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteZipCodeInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteZipCodeByZip": Object {
    "model": "ZipCode",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteZipCodePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "zip": Object {
            "isNotNull": true,
            "name": "zip",
            "type": "Int",
          },
        },
        "type": "DeleteZipCodeByZipInput",
      },
    },
    "qtype": "mutation",
  },
  "forgotPassword": Object {
    "mutationType": "other",
    "output": Object {
      "kind": "OBJECT",
      "name": "ForgotPasswordPayload",
      "ofType": null,
    },
    "outputs": Array [],
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "email": Object {
            "name": "email",
            "type": "String",
          },
        },
        "type": "ForgotPasswordInput",
      },
    },
    "qtype": "mutation",
  },
  "login": Object {
    "model": "ApiToken",
    "mutationType": "other",
    "output": Object {
      "kind": "OBJECT",
      "name": "LoginPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "email": Object {
            "isNotNull": true,
            "name": "email",
            "type": "String",
          },
          "password": Object {
            "isNotNull": true,
            "name": "password",
            "type": "String",
          },
        },
        "type": "LoginInput",
      },
    },
    "qtype": "mutation",
  },
  "register": Object {
    "model": "ApiToken",
    "mutationType": "other",
    "output": Object {
      "kind": "OBJECT",
      "name": "RegisterPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "email": Object {
            "name": "email",
            "type": "String",
          },
          "password": Object {
            "name": "password",
            "type": "String",
          },
        },
        "type": "RegisterInput",
      },
    },
    "qtype": "mutation",
  },
  "resetPassword": Object {
    "mutationType": "other",
    "output": Object {
      "kind": "OBJECT",
      "name": "ResetPasswordPayload",
      "ofType": null,
    },
    "outputs": Array [
      Object {
        "name": "boolean",
        "type": Object {
          "kind": "SCALAR",
          "name": "Boolean",
          "ofType": null,
        },
      },
    ],
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "newPassword": Object {
            "name": "newPassword",
            "type": "String",
          },
          "resetToken": Object {
            "name": "resetToken",
            "type": "String",
          },
          "roleId": Object {
            "name": "roleId",
            "type": "UUID",
          },
        },
        "type": "ResetPasswordInput",
      },
    },
    "qtype": "mutation",
  },
  "sendVerificationEmail": Object {
    "mutationType": "other",
    "output": Object {
      "kind": "OBJECT",
      "name": "SendVerificationEmailPayload",
      "ofType": null,
    },
    "outputs": Array [
      Object {
        "name": "boolean",
        "type": Object {
          "kind": "SCALAR",
          "name": "Boolean",
          "ofType": null,
        },
      },
    ],
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "email": Object {
            "name": "email",
            "type": "String",
          },
        },
        "type": "SendVerificationEmailInput",
      },
    },
    "qtype": "mutation",
  },
  "setPassword": Object {
    "mutationType": "other",
    "output": Object {
      "kind": "OBJECT",
      "name": "SetPasswordPayload",
      "ofType": null,
    },
    "outputs": Array [
      Object {
        "name": "boolean",
        "type": Object {
          "kind": "SCALAR",
          "name": "Boolean",
          "ofType": null,
        },
      },
    ],
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "newPassword": Object {
            "name": "newPassword",
            "type": "String",
          },
        },
        "type": "SetPasswordInput",
      },
    },
    "qtype": "mutation",
  },
  "updateAction": Object {
    "model": "Action",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "activityFeedText": Object {
                "name": "activityFeedText",
                "type": "String",
              },
              "alreadyCompletedActionText": Object {
                "name": "alreadyCompletedActionText",
                "type": "String",
              },
              "approved": Object {
                "name": "approved",
                "type": "Boolean",
              },
              "callToAction": Object {
                "name": "callToAction",
                "type": "String",
              },
              "completedActionText": Object {
                "name": "completedActionText",
                "type": "String",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "discoveryDescription": Object {
                "name": "discoveryDescription",
                "type": "String",
              },
              "discoveryHeader": Object {
                "name": "discoveryHeader",
                "type": "String",
              },
              "enableNotifications": Object {
                "name": "enableNotifications",
                "type": "Boolean",
              },
              "enableNotificationsText": Object {
                "name": "enableNotificationsText",
                "type": "String",
              },
              "endDate": Object {
                "name": "endDate",
                "type": "Datetime",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "locationRadius": Object {
                "name": "locationRadius",
                "type": "BigFloat",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "photo": Object {
                "name": "photo",
                "type": "JSON",
              },
              "photoUpload": Object {
                "name": "photoUpload",
                "type": "Upload",
              },
              "rewardAmount": Object {
                "name": "rewardAmount",
                "type": "BigFloat",
              },
              "search": Object {
                "name": "search",
                "type": "FullText",
              },
              "slug": Object {
                "name": "slug",
                "type": "String",
              },
              "startDate": Object {
                "name": "startDate",
                "type": "Datetime",
              },
              "tags": Object {
                "isArray": true,
                "name": "tags",
                "type": "String",
              },
              "timeRequired": Object {
                "name": "timeRequired",
                "properties": Object {
                  "days": Object {
                    "name": "days",
                    "type": "Int",
                  },
                  "hours": Object {
                    "name": "hours",
                    "type": "Int",
                  },
                  "minutes": Object {
                    "name": "minutes",
                    "type": "Int",
                  },
                  "months": Object {
                    "name": "months",
                    "type": "Int",
                  },
                  "seconds": Object {
                    "name": "seconds",
                    "type": "Float",
                  },
                  "years": Object {
                    "name": "years",
                    "type": "Int",
                  },
                },
              },
              "title": Object {
                "name": "title",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateActionInput",
      },
    },
    "qtype": "mutation",
  },
  "updateActionBySlug": Object {
    "model": "Action",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "activityFeedText": Object {
                "name": "activityFeedText",
                "type": "String",
              },
              "alreadyCompletedActionText": Object {
                "name": "alreadyCompletedActionText",
                "type": "String",
              },
              "approved": Object {
                "name": "approved",
                "type": "Boolean",
              },
              "callToAction": Object {
                "name": "callToAction",
                "type": "String",
              },
              "completedActionText": Object {
                "name": "completedActionText",
                "type": "String",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "discoveryDescription": Object {
                "name": "discoveryDescription",
                "type": "String",
              },
              "discoveryHeader": Object {
                "name": "discoveryHeader",
                "type": "String",
              },
              "enableNotifications": Object {
                "name": "enableNotifications",
                "type": "Boolean",
              },
              "enableNotificationsText": Object {
                "name": "enableNotificationsText",
                "type": "String",
              },
              "endDate": Object {
                "name": "endDate",
                "type": "Datetime",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "locationRadius": Object {
                "name": "locationRadius",
                "type": "BigFloat",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "photo": Object {
                "name": "photo",
                "type": "JSON",
              },
              "photoUpload": Object {
                "name": "photoUpload",
                "type": "Upload",
              },
              "rewardAmount": Object {
                "name": "rewardAmount",
                "type": "BigFloat",
              },
              "search": Object {
                "name": "search",
                "type": "FullText",
              },
              "slug": Object {
                "name": "slug",
                "type": "String",
              },
              "startDate": Object {
                "name": "startDate",
                "type": "Datetime",
              },
              "tags": Object {
                "isArray": true,
                "name": "tags",
                "type": "String",
              },
              "timeRequired": Object {
                "name": "timeRequired",
                "properties": Object {
                  "days": Object {
                    "name": "days",
                    "type": "Int",
                  },
                  "hours": Object {
                    "name": "hours",
                    "type": "Int",
                  },
                  "minutes": Object {
                    "name": "minutes",
                    "type": "Int",
                  },
                  "months": Object {
                    "name": "months",
                    "type": "Int",
                  },
                  "seconds": Object {
                    "name": "seconds",
                    "type": "Float",
                  },
                  "years": Object {
                    "name": "years",
                    "type": "Int",
                  },
                },
              },
              "title": Object {
                "name": "title",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
          "slug": Object {
            "isNotNull": true,
            "name": "slug",
            "type": "String",
          },
        },
        "type": "UpdateActionBySlugInput",
      },
    },
    "qtype": "mutation",
  },
  "updateActionGoal": Object {
    "model": "ActionGoal",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateActionGoalPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "actionId": Object {
            "isNotNull": true,
            "name": "actionId",
            "type": "UUID",
          },
          "goalId": Object {
            "isNotNull": true,
            "name": "goalId",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "goalId": Object {
                "name": "goalId",
                "type": "UUID",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateActionGoalInput",
      },
    },
    "qtype": "mutation",
  },
  "updateActionItem": Object {
    "model": "ActionItem",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateActionItemPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "embedCode": Object {
                "name": "embedCode",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "isRequired": Object {
                "name": "isRequired",
                "type": "Boolean",
              },
              "itemOrder": Object {
                "name": "itemOrder",
                "type": "Int",
              },
              "media": Object {
                "name": "media",
                "type": "String",
              },
              "mediaUpload": Object {
                "name": "mediaUpload",
                "type": "Upload",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "notificationText": Object {
                "name": "notificationText",
                "type": "String",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "timeRequired": Object {
                "name": "timeRequired",
                "properties": Object {
                  "days": Object {
                    "name": "days",
                    "type": "Int",
                  },
                  "hours": Object {
                    "name": "hours",
                    "type": "Int",
                  },
                  "minutes": Object {
                    "name": "minutes",
                    "type": "Int",
                  },
                  "months": Object {
                    "name": "months",
                    "type": "Int",
                  },
                  "seconds": Object {
                    "name": "seconds",
                    "type": "Float",
                  },
                  "years": Object {
                    "name": "years",
                    "type": "Int",
                  },
                },
              },
              "type": Object {
                "name": "type",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "url": Object {
                "name": "url",
                "type": "String",
              },
            },
          },
        },
        "type": "UpdateActionItemInput",
      },
    },
    "qtype": "mutation",
  },
  "updateActionResult": Object {
    "model": "ActionResult",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateActionResultPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateActionResultInput",
      },
    },
    "qtype": "mutation",
  },
  "updateGoal": Object {
    "model": "Goal",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateGoalPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "icon": Object {
                "name": "icon",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "search": Object {
                "name": "search",
                "type": "FullText",
              },
              "shortName": Object {
                "name": "shortName",
                "type": "String",
              },
              "slug": Object {
                "name": "slug",
                "type": "String",
              },
              "subHead": Object {
                "name": "subHead",
                "type": "String",
              },
              "tags": Object {
                "isArray": true,
                "name": "tags",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateGoalInput",
      },
    },
    "qtype": "mutation",
  },
  "updateGoalByName": Object {
    "model": "Goal",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateGoalPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "name": Object {
            "isNotNull": true,
            "name": "name",
            "type": "String",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "icon": Object {
                "name": "icon",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "search": Object {
                "name": "search",
                "type": "FullText",
              },
              "shortName": Object {
                "name": "shortName",
                "type": "String",
              },
              "slug": Object {
                "name": "slug",
                "type": "String",
              },
              "subHead": Object {
                "name": "subHead",
                "type": "String",
              },
              "tags": Object {
                "isArray": true,
                "name": "tags",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateGoalByNameInput",
      },
    },
    "qtype": "mutation",
  },
  "updateGoalBySlug": Object {
    "model": "Goal",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateGoalPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "icon": Object {
                "name": "icon",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "search": Object {
                "name": "search",
                "type": "FullText",
              },
              "shortName": Object {
                "name": "shortName",
                "type": "String",
              },
              "slug": Object {
                "name": "slug",
                "type": "String",
              },
              "subHead": Object {
                "name": "subHead",
                "type": "String",
              },
              "tags": Object {
                "isArray": true,
                "name": "tags",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
          "slug": Object {
            "isNotNull": true,
            "name": "slug",
            "type": "String",
          },
        },
        "type": "UpdateGoalBySlugInput",
      },
    },
    "qtype": "mutation",
  },
  "updateGoalExplanation": Object {
    "model": "GoalExplanation",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateGoalExplanationPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "audio": Object {
                "name": "audio",
                "type": "JSON",
              },
              "audioDuration": Object {
                "name": "audioDuration",
                "properties": Object {
                  "days": Object {
                    "name": "days",
                    "type": "Int",
                  },
                  "hours": Object {
                    "name": "hours",
                    "type": "Int",
                  },
                  "minutes": Object {
                    "name": "minutes",
                    "type": "Int",
                  },
                  "months": Object {
                    "name": "months",
                    "type": "Int",
                  },
                  "seconds": Object {
                    "name": "seconds",
                    "type": "Float",
                  },
                  "years": Object {
                    "name": "years",
                    "type": "Int",
                  },
                },
              },
              "audioUpload": Object {
                "name": "audioUpload",
                "type": "Upload",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "explanation": Object {
                "name": "explanation",
                "type": "String",
              },
              "explanationTitle": Object {
                "name": "explanationTitle",
                "type": "String",
              },
              "goalId": Object {
                "name": "goalId",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateGoalExplanationInput",
      },
    },
    "qtype": "mutation",
  },
  "updateMessage": Object {
    "model": "Message",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateMessagePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "content": Object {
                "name": "content",
                "type": "JSON",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "groupId": Object {
                "name": "groupId",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "senderId": Object {
                "name": "senderId",
                "type": "UUID",
              },
              "type": Object {
                "name": "type",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "upload": Object {
                "name": "upload",
                "type": "String",
              },
              "uploadUpload": Object {
                "name": "uploadUpload",
                "type": "Upload",
              },
            },
          },
        },
        "type": "UpdateMessageInput",
      },
    },
    "qtype": "mutation",
  },
  "updateMessageGroup": Object {
    "model": "MessageGroup",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateMessageGroupPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "memberIds": Object {
                "isArray": true,
                "name": "memberIds",
                "type": "UUID",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateMessageGroupInput",
      },
    },
    "qtype": "mutation",
  },
  "updateNewsUpdate": Object {
    "model": "NewsUpdate",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateNewsUpdatePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "link": Object {
                "name": "link",
                "type": "String",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "photo": Object {
                "name": "photo",
                "type": "JSON",
              },
              "photoUpload": Object {
                "name": "photoUpload",
                "type": "Upload",
              },
              "publishedAt": Object {
                "name": "publishedAt",
                "type": "Datetime",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateNewsUpdateInput",
      },
    },
    "qtype": "mutation",
  },
  "updateOrganizationProfile": Object {
    "model": "OrganizationProfile",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateOrganizationProfilePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "organizationId": Object {
                "name": "organizationId",
                "type": "UUID",
              },
              "profilePicture": Object {
                "name": "profilePicture",
                "type": "JSON",
              },
              "profilePictureUpload": Object {
                "name": "profilePictureUpload",
                "type": "Upload",
              },
              "reputation": Object {
                "name": "reputation",
                "type": "BigFloat",
              },
              "tags": Object {
                "isArray": true,
                "name": "tags",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "website": Object {
                "name": "website",
                "type": "String",
              },
            },
          },
        },
        "type": "UpdateOrganizationProfileInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUser": Object {
    "model": "User",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "type": Object {
                "name": "type",
                "type": "Int",
              },
            },
          },
        },
        "type": "UpdateUserInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserAction": Object {
    "model": "UserAction",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "actionStarted": Object {
                "name": "actionStarted",
                "type": "Datetime",
              },
              "complete": Object {
                "name": "complete",
                "type": "Boolean",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "rejected": Object {
                "name": "rejected",
                "type": "Boolean",
              },
              "rejectedReason": Object {
                "name": "rejectedReason",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
              "userRating": Object {
                "name": "userRating",
                "type": "Int",
              },
              "verified": Object {
                "name": "verified",
                "type": "Boolean",
              },
              "verifiedDate": Object {
                "name": "verifiedDate",
                "type": "Datetime",
              },
              "verifierId": Object {
                "name": "verifierId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateUserActionInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserActionItem": Object {
    "model": "UserActionItem",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserActionItemPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "actionItemId": Object {
                "name": "actionItemId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "status": Object {
                "name": "status",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userActionId": Object {
                "name": "userActionId",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
              "value": Object {
                "name": "value",
                "type": "JSON",
              },
            },
          },
        },
        "type": "UpdateUserActionItemInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserActionReaction": Object {
    "model": "UserActionReaction",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserActionReactionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "reacterId": Object {
                "name": "reacterId",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userActionId": Object {
                "name": "userActionId",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateUserActionReactionInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserActionResult": Object {
    "model": "UserActionResult",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserActionResultPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "actionResultId": Object {
                "name": "actionResultId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userActionId": Object {
                "name": "userActionId",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
              "value": Object {
                "name": "value",
                "type": "JSON",
              },
            },
          },
        },
        "type": "UpdateUserActionResultInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserCharacteristic": Object {
    "model": "UserCharacteristic",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserCharacteristicPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "age": Object {
                "name": "age",
                "type": "Int",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "diyLevel": Object {
                "name": "diyLevel",
                "type": "Int",
              },
              "dob": Object {
                "name": "dob",
                "type": "Date",
              },
              "education": Object {
                "name": "education",
                "type": "String",
              },
              "freeTime": Object {
                "name": "freeTime",
                "type": "Int",
              },
              "gardenerLevel": Object {
                "name": "gardenerLevel",
                "type": "Int",
              },
              "gender": Object {
                "name": "gender",
                "type": "String",
              },
              "homeOwnership": Object {
                "name": "homeOwnership",
                "type": "Int",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "income": Object {
                "name": "income",
                "type": "BigFloat",
              },
              "race": Object {
                "name": "race",
                "type": "String",
              },
              "researchToDoer": Object {
                "name": "researchToDoer",
                "type": "Int",
              },
              "treeHuggerLevel": Object {
                "name": "treeHuggerLevel",
                "type": "Int",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateUserCharacteristicInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserConnection": Object {
    "model": "UserConnection",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserConnectionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "accepted": Object {
                "name": "accepted",
                "type": "Boolean",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "requesterId": Object {
                "name": "requesterId",
                "type": "UUID",
              },
              "responderId": Object {
                "name": "responderId",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateUserConnectionInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserContact": Object {
    "model": "UserContact",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserContactPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "device": Object {
                "name": "device",
                "type": "String",
              },
              "emails": Object {
                "isArray": true,
                "name": "emails",
                "type": "String",
              },
              "fullName": Object {
                "name": "fullName",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
              "vcf": Object {
                "name": "vcf",
                "type": "JSON",
              },
            },
          },
        },
        "type": "UpdateUserContactInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserEmail": Object {
    "model": "UserEmail",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserEmailPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "email": Object {
                "name": "email",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "isVerified": Object {
                "name": "isVerified",
                "type": "Boolean",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateUserEmailInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserEmailByEmail": Object {
    "model": "UserEmail",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserEmailPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "email": Object {
            "isNotNull": true,
            "name": "email",
            "type": "String",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "email": Object {
                "name": "email",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "isVerified": Object {
                "name": "isVerified",
                "type": "Boolean",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateUserEmailByEmailInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserEmailByUserId": Object {
    "model": "UserEmail",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserEmailPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "email": Object {
                "name": "email",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "isVerified": Object {
                "name": "isVerified",
                "type": "Boolean",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
          "userId": Object {
            "isNotNull": true,
            "name": "userId",
            "type": "UUID",
          },
        },
        "type": "UpdateUserEmailByUserIdInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserMessage": Object {
    "model": "UserMessage",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserMessagePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "content": Object {
                "name": "content",
                "type": "JSON",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "received": Object {
                "name": "received",
                "type": "Boolean",
              },
              "receiverId": Object {
                "name": "receiverId",
                "type": "UUID",
              },
              "receiverReaction": Object {
                "name": "receiverReaction",
                "type": "String",
              },
              "receiverRead": Object {
                "name": "receiverRead",
                "type": "Boolean",
              },
              "senderId": Object {
                "name": "senderId",
                "type": "UUID",
              },
              "senderReaction": Object {
                "name": "senderReaction",
                "type": "String",
              },
              "type": Object {
                "name": "type",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "upload": Object {
                "name": "upload",
                "type": "String",
              },
              "uploadUpload": Object {
                "name": "uploadUpload",
                "type": "Upload",
              },
            },
          },
        },
        "type": "UpdateUserMessageInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserPassAction": Object {
    "model": "UserPassAction",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserPassActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateUserPassActionInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserProfile": Object {
    "model": "UserProfile",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserProfilePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "bio": Object {
                "name": "bio",
                "type": "String",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "desired": Object {
                "isArray": true,
                "name": "desired",
                "type": "String",
              },
              "displayName": Object {
                "name": "displayName",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "profilePicture": Object {
                "name": "profilePicture",
                "type": "JSON",
              },
              "profilePictureUpload": Object {
                "name": "profilePictureUpload",
                "type": "Upload",
              },
              "reputation": Object {
                "name": "reputation",
                "type": "BigFloat",
              },
              "tags": Object {
                "isArray": true,
                "name": "tags",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateUserProfileInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserSavedAction": Object {
    "model": "UserSavedAction",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserSavedActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateUserSavedActionInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserSetting": Object {
    "model": "UserSetting",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserSettingPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "firstName": Object {
                "name": "firstName",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "lastName": Object {
                "name": "lastName",
                "type": "String",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "searchRadius": Object {
                "name": "searchRadius",
                "type": "BigFloat",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
              "zip": Object {
                "name": "zip",
                "type": "Int",
              },
            },
          },
        },
        "type": "UpdateUserSettingInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserViewedAction": Object {
    "model": "UserViewedAction",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserViewedActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateUserViewedActionInput",
      },
    },
    "qtype": "mutation",
  },
  "updateZipCode": Object {
    "model": "ZipCode",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateZipCodePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "bbox": Object {
                "name": "bbox",
                "type": "GeoJSON",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "zip": Object {
                "name": "zip",
                "type": "Int",
              },
            },
          },
        },
        "type": "UpdateZipCodeInput",
      },
    },
    "qtype": "mutation",
  },
  "updateZipCodeByZip": Object {
    "model": "ZipCode",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateZipCodePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "bbox": Object {
                "name": "bbox",
                "type": "GeoJSON",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "zip": Object {
                "name": "zip",
                "type": "Int",
              },
            },
          },
          "zip": Object {
            "isNotNull": true,
            "name": "zip",
            "type": "Int",
          },
        },
        "type": "UpdateZipCodeByZipInput",
      },
    },
    "qtype": "mutation",
  },
  "verifyEmail": Object {
    "mutationType": "other",
    "output": Object {
      "kind": "OBJECT",
      "name": "VerifyEmailPayload",
      "ofType": null,
    },
    "outputs": Array [
      Object {
        "name": "boolean",
        "type": Object {
          "kind": "SCALAR",
          "name": "Boolean",
          "ofType": null,
        },
      },
    ],
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "emailId": Object {
            "name": "emailId",
            "type": "UUID",
          },
          "token": Object {
            "name": "token",
            "type": "String",
          },
        },
        "type": "VerifyEmailInput",
      },
    },
    "qtype": "mutation",
  },
}
`;

exports[`queriesDbe 1`] = `
Object {
  "_meta": Object {
    "model": "Metaschema",
    "properties": Object {},
    "qtype": "getOne",
    "selection": Array [
      Object {
        "model": "MetaschemaTable",
        "name": "tables",
        "properties": Object {},
        "qtype": "getOne",
        "selection": Array [
          "name",
          "query",
          "inflection",
          "fields",
          "constraints",
          "foreignKeyConstraints",
          "primaryKeyConstraints",
          "uniqueConstraints",
          "checkConstraints",
          "exclusionConstraints",
        ],
      },
    ],
  },
  "action": Object {
    "model": "Action",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "slug",
      "photo",
      "title",
      "description",
      "discoveryHeader",
      "discoveryDescription",
      "enableNotifications",
      "enableNotificationsText",
      "search",
      "locationRadius",
      "startDate",
      "endDate",
      "approved",
      "rewardAmount",
      "activityFeedText",
      "callToAction",
      "completedActionText",
      "alreadyCompletedActionText",
      "tags",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "ownerId",
      Object {
        "model": "ActionGoal",
        "name": "actionGoals",
        "qtype": "getMany",
        "selection": Array [
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "goalId",
          "ownerId",
        ],
      },
      Object {
        "model": "ActionResult",
        "name": "actionResults",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "ownerId",
        ],
      },
      Object {
        "model": "ActionItem",
        "name": "actionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "description",
          "type",
          "itemOrder",
          "isRequired",
          "notificationText",
          "embedCode",
          "url",
          "media",
          "ownerId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
        ],
      },
      Object {
        "model": "UserAction",
        "name": "userActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actionStarted",
          "complete",
          "verified",
          "verifiedDate",
          "userRating",
          "rejected",
          "rejectedReason",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "verifierId",
          "actionId",
        ],
      },
      Object {
        "model": "UserActionResult",
        "name": "userActionResults",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "value",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
          "userActionId",
          "actionResultId",
        ],
      },
      Object {
        "model": "UserActionItem",
        "name": "userActionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "value",
          "status",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
          "userActionId",
          "actionItemId",
        ],
      },
      Object {
        "model": "UserPassAction",
        "name": "userPassActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
        ],
      },
      Object {
        "model": "UserSavedAction",
        "name": "userSavedActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
        ],
      },
      Object {
        "model": "UserViewedAction",
        "name": "userViewedActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
        ],
      },
      Object {
        "model": "UserActionReaction",
        "name": "userActionReactions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userActionId",
          "userId",
          "reacterId",
          "actionId",
        ],
      },
      "searchRank",
      Object {
        "model": "Goal",
        "name": "goals",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "slug",
          "shortName",
          "icon",
          "subHead",
          "tags",
          "search",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "searchRank",
        ],
      },
    ],
  },
  "actionBySlug": Object {
    "model": "Action",
    "properties": Object {
      "slug": Object {
        "isNotNull": true,
        "type": "String",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "slug",
      "photo",
      "title",
      "description",
      "discoveryHeader",
      "discoveryDescription",
      "enableNotifications",
      "enableNotificationsText",
      "search",
      "locationRadius",
      "startDate",
      "endDate",
      "approved",
      "rewardAmount",
      "activityFeedText",
      "callToAction",
      "completedActionText",
      "alreadyCompletedActionText",
      "tags",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "ownerId",
      Object {
        "model": "ActionGoal",
        "name": "actionGoals",
        "qtype": "getMany",
        "selection": Array [
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "goalId",
          "ownerId",
        ],
      },
      Object {
        "model": "ActionResult",
        "name": "actionResults",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "ownerId",
        ],
      },
      Object {
        "model": "ActionItem",
        "name": "actionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "description",
          "type",
          "itemOrder",
          "isRequired",
          "notificationText",
          "embedCode",
          "url",
          "media",
          "ownerId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
        ],
      },
      Object {
        "model": "UserAction",
        "name": "userActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actionStarted",
          "complete",
          "verified",
          "verifiedDate",
          "userRating",
          "rejected",
          "rejectedReason",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "verifierId",
          "actionId",
        ],
      },
      Object {
        "model": "UserActionResult",
        "name": "userActionResults",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "value",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
          "userActionId",
          "actionResultId",
        ],
      },
      Object {
        "model": "UserActionItem",
        "name": "userActionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "value",
          "status",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
          "userActionId",
          "actionItemId",
        ],
      },
      Object {
        "model": "UserPassAction",
        "name": "userPassActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
        ],
      },
      Object {
        "model": "UserSavedAction",
        "name": "userSavedActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
        ],
      },
      Object {
        "model": "UserViewedAction",
        "name": "userViewedActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
        ],
      },
      Object {
        "model": "UserActionReaction",
        "name": "userActionReactions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userActionId",
          "userId",
          "reacterId",
          "actionId",
        ],
      },
      "searchRank",
      Object {
        "model": "Goal",
        "name": "goals",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "slug",
          "shortName",
          "icon",
          "subHead",
          "tags",
          "search",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "searchRank",
        ],
      },
    ],
  },
  "actionGoal": Object {
    "model": "ActionGoal",
    "properties": Object {
      "actionId": Object {
        "isNotNull": true,
        "type": "UUID",
      },
      "goalId": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "actionId",
      "goalId",
      "ownerId",
    ],
  },
  "actionGoals": Object {
    "model": "ActionGoal",
    "qtype": "getMany",
    "selection": Array [
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "actionId",
      "goalId",
      "ownerId",
    ],
  },
  "actionItem": Object {
    "model": "ActionItem",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "name",
      "description",
      "type",
      "itemOrder",
      "isRequired",
      "notificationText",
      "embedCode",
      "url",
      "media",
      "ownerId",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "actionId",
      Object {
        "model": "UserActionItem",
        "name": "userActionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "value",
          "status",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
          "userActionId",
          "actionItemId",
        ],
      },
    ],
  },
  "actionItems": Object {
    "model": "ActionItem",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "name",
      "description",
      "type",
      "itemOrder",
      "isRequired",
      "notificationText",
      "embedCode",
      "url",
      "media",
      "ownerId",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "actionId",
      Object {
        "model": "UserActionItem",
        "name": "userActionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "value",
          "status",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
          "userActionId",
          "actionItemId",
        ],
      },
    ],
  },
  "actionResult": Object {
    "model": "ActionResult",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "actionId",
      "ownerId",
      Object {
        "model": "UserActionResult",
        "name": "userActionResults",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "value",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
          "userActionId",
          "actionResultId",
        ],
      },
    ],
  },
  "actionResults": Object {
    "model": "ActionResult",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "actionId",
      "ownerId",
      Object {
        "model": "UserActionResult",
        "name": "userActionResults",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "value",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
          "userActionId",
          "actionResultId",
        ],
      },
    ],
  },
  "actions": Object {
    "model": "Action",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "slug",
      "photo",
      "title",
      "description",
      "discoveryHeader",
      "discoveryDescription",
      "enableNotifications",
      "enableNotificationsText",
      "search",
      "locationRadius",
      "startDate",
      "endDate",
      "approved",
      "rewardAmount",
      "activityFeedText",
      "callToAction",
      "completedActionText",
      "alreadyCompletedActionText",
      "tags",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "ownerId",
      Object {
        "model": "ActionGoal",
        "name": "actionGoals",
        "qtype": "getMany",
        "selection": Array [
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "goalId",
          "ownerId",
        ],
      },
      Object {
        "model": "ActionResult",
        "name": "actionResults",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "ownerId",
        ],
      },
      Object {
        "model": "ActionItem",
        "name": "actionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "description",
          "type",
          "itemOrder",
          "isRequired",
          "notificationText",
          "embedCode",
          "url",
          "media",
          "ownerId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
        ],
      },
      Object {
        "model": "UserAction",
        "name": "userActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actionStarted",
          "complete",
          "verified",
          "verifiedDate",
          "userRating",
          "rejected",
          "rejectedReason",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "verifierId",
          "actionId",
        ],
      },
      Object {
        "model": "UserActionResult",
        "name": "userActionResults",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "value",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
          "userActionId",
          "actionResultId",
        ],
      },
      Object {
        "model": "UserActionItem",
        "name": "userActionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "value",
          "status",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
          "userActionId",
          "actionItemId",
        ],
      },
      Object {
        "model": "UserPassAction",
        "name": "userPassActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
        ],
      },
      Object {
        "model": "UserSavedAction",
        "name": "userSavedActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
        ],
      },
      Object {
        "model": "UserViewedAction",
        "name": "userViewedActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
        ],
      },
      Object {
        "model": "UserActionReaction",
        "name": "userActionReactions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userActionId",
          "userId",
          "reacterId",
          "actionId",
        ],
      },
      "searchRank",
      Object {
        "model": "Goal",
        "name": "goals",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "slug",
          "shortName",
          "icon",
          "subHead",
          "tags",
          "search",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "searchRank",
        ],
      },
    ],
  },
  "getCurrentUser": Object {
    "model": "User",
    "properties": Object {},
    "qtype": "getOne",
    "selection": Array [
      "id",
      "type",
      Object {
        "model": "UserContact",
        "name": "userContacts",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "vcf",
          "fullName",
          "emails",
          "device",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
        ],
      },
      Object {
        "model": "UserConnection",
        "name": "userConnectionsByRequesterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "accepted",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "requesterId",
          "responderId",
        ],
      },
      Object {
        "model": "UserConnection",
        "name": "userConnectionsByResponderId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "accepted",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "requesterId",
          "responderId",
        ],
      },
      Object {
        "model": "Action",
        "name": "actionsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "slug",
          "photo",
          "title",
          "description",
          "discoveryHeader",
          "discoveryDescription",
          "enableNotifications",
          "enableNotificationsText",
          "search",
          "locationRadius",
          "startDate",
          "endDate",
          "approved",
          "rewardAmount",
          "activityFeedText",
          "callToAction",
          "completedActionText",
          "alreadyCompletedActionText",
          "tags",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "searchRank",
        ],
      },
      Object {
        "model": "ActionGoal",
        "name": "actionGoalsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "goalId",
          "ownerId",
        ],
      },
      Object {
        "model": "ActionResult",
        "name": "actionResultsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "ownerId",
        ],
      },
      Object {
        "model": "UserAction",
        "name": "userActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actionStarted",
          "complete",
          "verified",
          "verifiedDate",
          "userRating",
          "rejected",
          "rejectedReason",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "verifierId",
          "actionId",
        ],
      },
      Object {
        "model": "UserAction",
        "name": "userActionsByVerifierId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actionStarted",
          "complete",
          "verified",
          "verifiedDate",
          "userRating",
          "rejected",
          "rejectedReason",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "verifierId",
          "actionId",
        ],
      },
      Object {
        "model": "UserActionResult",
        "name": "userActionResults",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "value",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
          "userActionId",
          "actionResultId",
        ],
      },
      Object {
        "model": "UserActionItem",
        "name": "userActionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "value",
          "status",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
          "userActionId",
          "actionItemId",
        ],
      },
      Object {
        "model": "UserPassAction",
        "name": "userPassActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
        ],
      },
      Object {
        "model": "UserSavedAction",
        "name": "userSavedActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
        ],
      },
      Object {
        "model": "UserViewedAction",
        "name": "userViewedActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
        ],
      },
      Object {
        "model": "UserActionReaction",
        "name": "userActionReactions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userActionId",
          "userId",
          "reacterId",
          "actionId",
        ],
      },
      Object {
        "model": "UserActionReaction",
        "name": "userActionReactionsByReacterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userActionId",
          "userId",
          "reacterId",
          "actionId",
        ],
      },
      Object {
        "model": "UserMessage",
        "name": "userMessagesBySenderId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "type",
          "content",
          "upload",
          "received",
          "receiverRead",
          "senderReaction",
          "receiverReaction",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "senderId",
          "receiverId",
        ],
      },
      Object {
        "model": "UserMessage",
        "name": "userMessagesByReceiverId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "type",
          "content",
          "upload",
          "received",
          "receiverRead",
          "senderReaction",
          "receiverReaction",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "senderId",
          "receiverId",
        ],
      },
      Object {
        "model": "Message",
        "name": "messagesBySenderId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "type",
          "content",
          "upload",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "senderId",
          "groupId",
        ],
      },
    ],
  },
  "goal": Object {
    "model": "Goal",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "name",
      "slug",
      "shortName",
      "icon",
      "subHead",
      "tags",
      "search",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      Object {
        "model": "GoalExplanation",
        "name": "goalExplanations",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "audio",
          "explanationTitle",
          "explanation",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "goalId",
        ],
      },
      Object {
        "model": "ActionGoal",
        "name": "actionGoals",
        "qtype": "getMany",
        "selection": Array [
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "goalId",
          "ownerId",
        ],
      },
      "searchRank",
      Object {
        "model": "Action",
        "name": "actions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "slug",
          "photo",
          "title",
          "description",
          "discoveryHeader",
          "discoveryDescription",
          "enableNotifications",
          "enableNotificationsText",
          "search",
          "locationRadius",
          "startDate",
          "endDate",
          "approved",
          "rewardAmount",
          "activityFeedText",
          "callToAction",
          "completedActionText",
          "alreadyCompletedActionText",
          "tags",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "searchRank",
        ],
      },
    ],
  },
  "goalByName": Object {
    "model": "Goal",
    "properties": Object {
      "name": Object {
        "isNotNull": true,
        "type": "String",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "name",
      "slug",
      "shortName",
      "icon",
      "subHead",
      "tags",
      "search",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      Object {
        "model": "GoalExplanation",
        "name": "goalExplanations",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "audio",
          "explanationTitle",
          "explanation",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "goalId",
        ],
      },
      Object {
        "model": "ActionGoal",
        "name": "actionGoals",
        "qtype": "getMany",
        "selection": Array [
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "goalId",
          "ownerId",
        ],
      },
      "searchRank",
      Object {
        "model": "Action",
        "name": "actions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "slug",
          "photo",
          "title",
          "description",
          "discoveryHeader",
          "discoveryDescription",
          "enableNotifications",
          "enableNotificationsText",
          "search",
          "locationRadius",
          "startDate",
          "endDate",
          "approved",
          "rewardAmount",
          "activityFeedText",
          "callToAction",
          "completedActionText",
          "alreadyCompletedActionText",
          "tags",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "searchRank",
        ],
      },
    ],
  },
  "goalBySlug": Object {
    "model": "Goal",
    "properties": Object {
      "slug": Object {
        "isNotNull": true,
        "type": "String",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "name",
      "slug",
      "shortName",
      "icon",
      "subHead",
      "tags",
      "search",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      Object {
        "model": "GoalExplanation",
        "name": "goalExplanations",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "audio",
          "explanationTitle",
          "explanation",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "goalId",
        ],
      },
      Object {
        "model": "ActionGoal",
        "name": "actionGoals",
        "qtype": "getMany",
        "selection": Array [
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "goalId",
          "ownerId",
        ],
      },
      "searchRank",
      Object {
        "model": "Action",
        "name": "actions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "slug",
          "photo",
          "title",
          "description",
          "discoveryHeader",
          "discoveryDescription",
          "enableNotifications",
          "enableNotificationsText",
          "search",
          "locationRadius",
          "startDate",
          "endDate",
          "approved",
          "rewardAmount",
          "activityFeedText",
          "callToAction",
          "completedActionText",
          "alreadyCompletedActionText",
          "tags",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "searchRank",
        ],
      },
    ],
  },
  "goalExplanation": Object {
    "model": "GoalExplanation",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "audio",
      "explanationTitle",
      "explanation",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "goalId",
    ],
  },
  "goalExplanations": Object {
    "model": "GoalExplanation",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "audio",
      "explanationTitle",
      "explanation",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "goalId",
    ],
  },
  "goals": Object {
    "model": "Goal",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "name",
      "slug",
      "shortName",
      "icon",
      "subHead",
      "tags",
      "search",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      Object {
        "model": "GoalExplanation",
        "name": "goalExplanations",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "audio",
          "explanationTitle",
          "explanation",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "goalId",
        ],
      },
      Object {
        "model": "ActionGoal",
        "name": "actionGoals",
        "qtype": "getMany",
        "selection": Array [
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "goalId",
          "ownerId",
        ],
      },
      "searchRank",
      Object {
        "model": "Action",
        "name": "actions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "slug",
          "photo",
          "title",
          "description",
          "discoveryHeader",
          "discoveryDescription",
          "enableNotifications",
          "enableNotificationsText",
          "search",
          "locationRadius",
          "startDate",
          "endDate",
          "approved",
          "rewardAmount",
          "activityFeedText",
          "callToAction",
          "completedActionText",
          "alreadyCompletedActionText",
          "tags",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "searchRank",
        ],
      },
    ],
  },
  "message": Object {
    "model": "Message",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "type",
      "content",
      "upload",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "senderId",
      "groupId",
    ],
  },
  "messageGroup": Object {
    "model": "MessageGroup",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "name",
      "memberIds",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      Object {
        "model": "Message",
        "name": "messagesByGroupId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "type",
          "content",
          "upload",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "senderId",
          "groupId",
        ],
      },
    ],
  },
  "messageGroups": Object {
    "model": "MessageGroup",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "name",
      "memberIds",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      Object {
        "model": "Message",
        "name": "messagesByGroupId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "type",
          "content",
          "upload",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "senderId",
          "groupId",
        ],
      },
    ],
  },
  "messages": Object {
    "model": "Message",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "type",
      "content",
      "upload",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "senderId",
      "groupId",
    ],
  },
  "newsUpdate": Object {
    "model": "NewsUpdate",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "name",
      "description",
      "link",
      "publishedAt",
      "photo",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
    ],
  },
  "newsUpdates": Object {
    "model": "NewsUpdate",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "name",
      "description",
      "link",
      "publishedAt",
      "photo",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
    ],
  },
  "organizationProfile": Object {
    "model": "OrganizationProfile",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "name",
      "profilePicture",
      "description",
      "website",
      "reputation",
      "tags",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "organizationId",
    ],
  },
  "organizationProfiles": Object {
    "model": "OrganizationProfile",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "name",
      "profilePicture",
      "description",
      "website",
      "reputation",
      "tags",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "organizationId",
    ],
  },
  "user": Object {
    "model": "User",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "type",
      Object {
        "model": "UserContact",
        "name": "userContacts",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "vcf",
          "fullName",
          "emails",
          "device",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
        ],
      },
      Object {
        "model": "UserConnection",
        "name": "userConnectionsByRequesterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "accepted",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "requesterId",
          "responderId",
        ],
      },
      Object {
        "model": "UserConnection",
        "name": "userConnectionsByResponderId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "accepted",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "requesterId",
          "responderId",
        ],
      },
      Object {
        "model": "Action",
        "name": "actionsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "slug",
          "photo",
          "title",
          "description",
          "discoveryHeader",
          "discoveryDescription",
          "enableNotifications",
          "enableNotificationsText",
          "search",
          "locationRadius",
          "startDate",
          "endDate",
          "approved",
          "rewardAmount",
          "activityFeedText",
          "callToAction",
          "completedActionText",
          "alreadyCompletedActionText",
          "tags",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "searchRank",
        ],
      },
      Object {
        "model": "ActionGoal",
        "name": "actionGoalsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "goalId",
          "ownerId",
        ],
      },
      Object {
        "model": "ActionResult",
        "name": "actionResultsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "ownerId",
        ],
      },
      Object {
        "model": "UserAction",
        "name": "userActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actionStarted",
          "complete",
          "verified",
          "verifiedDate",
          "userRating",
          "rejected",
          "rejectedReason",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "verifierId",
          "actionId",
        ],
      },
      Object {
        "model": "UserAction",
        "name": "userActionsByVerifierId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actionStarted",
          "complete",
          "verified",
          "verifiedDate",
          "userRating",
          "rejected",
          "rejectedReason",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "verifierId",
          "actionId",
        ],
      },
      Object {
        "model": "UserActionResult",
        "name": "userActionResults",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "value",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
          "userActionId",
          "actionResultId",
        ],
      },
      Object {
        "model": "UserActionItem",
        "name": "userActionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "value",
          "status",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
          "userActionId",
          "actionItemId",
        ],
      },
      Object {
        "model": "UserPassAction",
        "name": "userPassActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
        ],
      },
      Object {
        "model": "UserSavedAction",
        "name": "userSavedActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
        ],
      },
      Object {
        "model": "UserViewedAction",
        "name": "userViewedActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
        ],
      },
      Object {
        "model": "UserActionReaction",
        "name": "userActionReactions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userActionId",
          "userId",
          "reacterId",
          "actionId",
        ],
      },
      Object {
        "model": "UserActionReaction",
        "name": "userActionReactionsByReacterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userActionId",
          "userId",
          "reacterId",
          "actionId",
        ],
      },
      Object {
        "model": "UserMessage",
        "name": "userMessagesBySenderId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "type",
          "content",
          "upload",
          "received",
          "receiverRead",
          "senderReaction",
          "receiverReaction",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "senderId",
          "receiverId",
        ],
      },
      Object {
        "model": "UserMessage",
        "name": "userMessagesByReceiverId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "type",
          "content",
          "upload",
          "received",
          "receiverRead",
          "senderReaction",
          "receiverReaction",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "senderId",
          "receiverId",
        ],
      },
      Object {
        "model": "Message",
        "name": "messagesBySenderId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "type",
          "content",
          "upload",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "senderId",
          "groupId",
        ],
      },
    ],
  },
  "userAction": Object {
    "model": "UserAction",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "actionStarted",
      "complete",
      "verified",
      "verifiedDate",
      "userRating",
      "rejected",
      "rejectedReason",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userId",
      "verifierId",
      "actionId",
      Object {
        "model": "UserActionResult",
        "name": "userActionResults",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "value",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
          "userActionId",
          "actionResultId",
        ],
      },
      Object {
        "model": "UserActionItem",
        "name": "userActionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "value",
          "status",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
          "userActionId",
          "actionItemId",
        ],
      },
      Object {
        "model": "UserActionReaction",
        "name": "userActionReactions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userActionId",
          "userId",
          "reacterId",
          "actionId",
        ],
      },
    ],
  },
  "userActionItem": Object {
    "model": "UserActionItem",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "value",
      "status",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userId",
      "actionId",
      "userActionId",
      "actionItemId",
    ],
  },
  "userActionItems": Object {
    "model": "UserActionItem",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "value",
      "status",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userId",
      "actionId",
      "userActionId",
      "actionItemId",
    ],
  },
  "userActionReaction": Object {
    "model": "UserActionReaction",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userActionId",
      "userId",
      "reacterId",
      "actionId",
    ],
  },
  "userActionReactions": Object {
    "model": "UserActionReaction",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userActionId",
      "userId",
      "reacterId",
      "actionId",
    ],
  },
  "userActionResult": Object {
    "model": "UserActionResult",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "value",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userId",
      "actionId",
      "userActionId",
      "actionResultId",
    ],
  },
  "userActionResults": Object {
    "model": "UserActionResult",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "value",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userId",
      "actionId",
      "userActionId",
      "actionResultId",
    ],
  },
  "userActions": Object {
    "model": "UserAction",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "actionStarted",
      "complete",
      "verified",
      "verifiedDate",
      "userRating",
      "rejected",
      "rejectedReason",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userId",
      "verifierId",
      "actionId",
      Object {
        "model": "UserActionResult",
        "name": "userActionResults",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "value",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
          "userActionId",
          "actionResultId",
        ],
      },
      Object {
        "model": "UserActionItem",
        "name": "userActionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "value",
          "status",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
          "userActionId",
          "actionItemId",
        ],
      },
      Object {
        "model": "UserActionReaction",
        "name": "userActionReactions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userActionId",
          "userId",
          "reacterId",
          "actionId",
        ],
      },
    ],
  },
  "userCharacteristic": Object {
    "model": "UserCharacteristic",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "income",
      "gender",
      "race",
      "age",
      "dob",
      "education",
      "homeOwnership",
      "treeHuggerLevel",
      "diyLevel",
      "gardenerLevel",
      "freeTime",
      "researchToDoer",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userId",
    ],
  },
  "userCharacteristics": Object {
    "model": "UserCharacteristic",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "income",
      "gender",
      "race",
      "age",
      "dob",
      "education",
      "homeOwnership",
      "treeHuggerLevel",
      "diyLevel",
      "gardenerLevel",
      "freeTime",
      "researchToDoer",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userId",
    ],
  },
  "userConnection": Object {
    "model": "UserConnection",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "accepted",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "requesterId",
      "responderId",
    ],
  },
  "userConnections": Object {
    "model": "UserConnection",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "accepted",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "requesterId",
      "responderId",
    ],
  },
  "userContact": Object {
    "model": "UserContact",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "vcf",
      "fullName",
      "emails",
      "device",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userId",
    ],
  },
  "userContacts": Object {
    "model": "UserContact",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "vcf",
      "fullName",
      "emails",
      "device",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userId",
    ],
  },
  "userEmail": Object {
    "model": "UserEmail",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "userId",
      "email",
      "isVerified",
    ],
  },
  "userEmailByEmail": Object {
    "model": "UserEmail",
    "properties": Object {
      "email": Object {
        "isNotNull": true,
        "type": "String",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "userId",
      "email",
      "isVerified",
    ],
  },
  "userEmailByUserId": Object {
    "model": "UserEmail",
    "properties": Object {
      "userId": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "userId",
      "email",
      "isVerified",
    ],
  },
  "userEmails": Object {
    "model": "UserEmail",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "userId",
      "email",
      "isVerified",
    ],
  },
  "userMessage": Object {
    "model": "UserMessage",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "type",
      "content",
      "upload",
      "received",
      "receiverRead",
      "senderReaction",
      "receiverReaction",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "senderId",
      "receiverId",
    ],
  },
  "userMessages": Object {
    "model": "UserMessage",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "type",
      "content",
      "upload",
      "received",
      "receiverRead",
      "senderReaction",
      "receiverReaction",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "senderId",
      "receiverId",
    ],
  },
  "userPassAction": Object {
    "model": "UserPassAction",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userId",
      "actionId",
    ],
  },
  "userPassActions": Object {
    "model": "UserPassAction",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userId",
      "actionId",
    ],
  },
  "userProfile": Object {
    "model": "UserProfile",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "profilePicture",
      "bio",
      "reputation",
      "displayName",
      "tags",
      "desired",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userId",
    ],
  },
  "userProfiles": Object {
    "model": "UserProfile",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "profilePicture",
      "bio",
      "reputation",
      "displayName",
      "tags",
      "desired",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userId",
    ],
  },
  "userSavedAction": Object {
    "model": "UserSavedAction",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userId",
      "actionId",
    ],
  },
  "userSavedActions": Object {
    "model": "UserSavedAction",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userId",
      "actionId",
    ],
  },
  "userSetting": Object {
    "model": "UserSetting",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "firstName",
      "lastName",
      "searchRadius",
      "zip",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userId",
    ],
  },
  "userSettings": Object {
    "model": "UserSetting",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "firstName",
      "lastName",
      "searchRadius",
      "zip",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userId",
    ],
  },
  "userViewedAction": Object {
    "model": "UserViewedAction",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userId",
      "actionId",
    ],
  },
  "userViewedActions": Object {
    "model": "UserViewedAction",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userId",
      "actionId",
    ],
  },
  "users": Object {
    "model": "User",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "type",
      Object {
        "model": "UserContact",
        "name": "userContacts",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "vcf",
          "fullName",
          "emails",
          "device",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
        ],
      },
      Object {
        "model": "UserConnection",
        "name": "userConnectionsByRequesterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "accepted",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "requesterId",
          "responderId",
        ],
      },
      Object {
        "model": "UserConnection",
        "name": "userConnectionsByResponderId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "accepted",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "requesterId",
          "responderId",
        ],
      },
      Object {
        "model": "Action",
        "name": "actionsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "slug",
          "photo",
          "title",
          "description",
          "discoveryHeader",
          "discoveryDescription",
          "enableNotifications",
          "enableNotificationsText",
          "search",
          "locationRadius",
          "startDate",
          "endDate",
          "approved",
          "rewardAmount",
          "activityFeedText",
          "callToAction",
          "completedActionText",
          "alreadyCompletedActionText",
          "tags",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "searchRank",
        ],
      },
      Object {
        "model": "ActionGoal",
        "name": "actionGoalsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "goalId",
          "ownerId",
        ],
      },
      Object {
        "model": "ActionResult",
        "name": "actionResultsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "ownerId",
        ],
      },
      Object {
        "model": "UserAction",
        "name": "userActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actionStarted",
          "complete",
          "verified",
          "verifiedDate",
          "userRating",
          "rejected",
          "rejectedReason",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "verifierId",
          "actionId",
        ],
      },
      Object {
        "model": "UserAction",
        "name": "userActionsByVerifierId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actionStarted",
          "complete",
          "verified",
          "verifiedDate",
          "userRating",
          "rejected",
          "rejectedReason",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "verifierId",
          "actionId",
        ],
      },
      Object {
        "model": "UserActionResult",
        "name": "userActionResults",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "value",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
          "userActionId",
          "actionResultId",
        ],
      },
      Object {
        "model": "UserActionItem",
        "name": "userActionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "value",
          "status",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
          "userActionId",
          "actionItemId",
        ],
      },
      Object {
        "model": "UserPassAction",
        "name": "userPassActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
        ],
      },
      Object {
        "model": "UserSavedAction",
        "name": "userSavedActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
        ],
      },
      Object {
        "model": "UserViewedAction",
        "name": "userViewedActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "actionId",
        ],
      },
      Object {
        "model": "UserActionReaction",
        "name": "userActionReactions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userActionId",
          "userId",
          "reacterId",
          "actionId",
        ],
      },
      Object {
        "model": "UserActionReaction",
        "name": "userActionReactionsByReacterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userActionId",
          "userId",
          "reacterId",
          "actionId",
        ],
      },
      Object {
        "model": "UserMessage",
        "name": "userMessagesBySenderId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "type",
          "content",
          "upload",
          "received",
          "receiverRead",
          "senderReaction",
          "receiverReaction",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "senderId",
          "receiverId",
        ],
      },
      Object {
        "model": "UserMessage",
        "name": "userMessagesByReceiverId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "type",
          "content",
          "upload",
          "received",
          "receiverRead",
          "senderReaction",
          "receiverReaction",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "senderId",
          "receiverId",
        ],
      },
      Object {
        "model": "Message",
        "name": "messagesBySenderId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "type",
          "content",
          "upload",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "senderId",
          "groupId",
        ],
      },
    ],
  },
  "zipCode": Object {
    "model": "ZipCode",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "zip",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
    ],
  },
  "zipCodeByZip": Object {
    "model": "ZipCode",
    "properties": Object {
      "zip": Object {
        "isNotNull": true,
        "type": "Int",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "zip",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
    ],
  },
  "zipCodes": Object {
    "model": "ZipCode",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "zip",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
    ],
  },
}
`;
